#!/bin/bash

FILE="./src/hdl/version_control/version_control_rom.vhdl"

# Current date, time, and seconds since epoch
# Array index           0  1  2  3  4  5  6
datetime_arr=($(date +"%Y %m %d %H %M %S %s"))
last_commit=$(git rev-parse --short=8 HEAD);

VER_MAJOR=$1
VER_MINOR=$2
VER_PATCH=$3

/bin/cat <<EOM >$FILE
-------------------------------------------------------------------------------
--  Company    : xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
--
--  Restricted ï¿½ Highly Confidential
--
--  COPYRIGHT
--
--  Ownership/Copyright (c) xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
--  This software program is the proprietary copyright material of
--  XXXXXXXXXXXXX. No Transfer or assignment of such copyright
--  is intended to be effected by any use of this software program.
--  This applies also to the permitted use by an authorized user under license
--  notwithstanding the terms and conditions of any agreement entered into
--  by an end user with an intermediary other than XXXXXXXXXXXX.
--
--  No part of this software program may be reproduced, amended, varied,
--  re-written or stored in a retrieval system in any form or by any means
--  without the prior written permission of XXXXXXXXXXXXX.
--
-------------------------------------------------------------------------------
-- Company: XXXXXXXXXXXXX
-- Engineer: XXXXXXXXXXXXX
-- Create Date: Autogenerated
-- Design Name:
-- Module Name: version_control_rom
-- Project Name: XXXXXXXXXXXXX
-- Target Devices:
-- Tool Versions: Vivado 2022.1
-- Description: Autogenerated version control information
-- Dependencies:
-- Additional Comments:
----------------------------------------------------------------------------------

library ieee;
  use ieee.std_logic_1164.all;
  use ieee.numeric_std.all;

entity version_control_rom is
  port (
    version_major : out   std_logic_vector(32 - 1 downto 0);
    version_minor : out   std_logic_vector(32 - 1 downto 0);
    version_sub   : out   std_logic_vector(32 - 1 downto 0);
    year          : out   std_logic_vector(32 - 1 downto 0);
    month         : out   std_logic_vector(32 - 1 downto 0);
    day           : out   std_logic_vector(32 - 1 downto 0);
    hour          : out   std_logic_vector(32 - 1 downto 0);
    minute        : out   std_logic_vector(32 - 1 downto 0);
    second        : out   std_logic_vector(32 - 1 downto 0);
    git_hash      : out   std_logic_vector(32 - 1 downto 0)
  );
end entity version_control_rom;

architecture rtl of version_control_rom is

  -- Version information
  constant C_VER_MAJOR_INT : integer                       := $VER_MAJOR;
  constant C_VER_MAJOR_HEX : std_logic_vector(31 downto 0) := std_logic_vector(to_unsigned(C_VER_MAJOR_INT, 32));
  constant C_VER_MINOR_INT : integer                       := $VER_MINOR;
  constant C_VER_MINOR_HEX : std_logic_vector(31 downto 0) := std_logic_vector(to_unsigned(C_VER_MINOR_INT, 32));
  constant C_VER_PATCH_INT : integer                       := $VER_PATCH;
  constant C_VER_PATCH_HEX : std_logic_vector(31 downto 0) := std_logic_vector(to_unsigned(C_VER_PATCH_INT, 32));

  -- Date information
  constant C_YEAR_INT  : integer                       := ${datetime_arr[0]};
  constant C_YEAR_HEX  : std_logic_vector(31 downto 0) := std_logic_vector(to_unsigned(C_YEAR_INT, 32));
  constant C_MONTH_INT : integer                       := ${datetime_arr[1]};
  constant C_MONTH_HEX : std_logic_vector(31 downto 0) := std_logic_vector(to_unsigned(C_MONTH_INT, 32));
  constant C_DAY_INT   : integer                       := ${datetime_arr[2]};
  constant C_DAY_HEX   : std_logic_vector(31 downto 0) := std_logic_vector(to_unsigned(C_DAY_INT, 32));
  -- Time information
  constant C_HOUR_INT   : integer                       := ${datetime_arr[3]};
  constant C_HOUR_HEX   : std_logic_vector(31 downto 0) := std_logic_vector(to_unsigned(C_HOUR_INT, 32));
  constant C_MINUTE_INT : integer                       := ${datetime_arr[4]};
  constant C_MINUTE_HEX : std_logic_vector(31 downto 0) := std_logic_vector(to_unsigned(C_MINUTE_INT, 32));
  constant C_SECOND_INT : integer                       := ${datetime_arr[5]};
  constant C_SECOND_HEX : std_logic_vector(31 downto 0) := std_logic_vector(to_unsigned(C_SECOND_INT, 32));
  -- Miscellaneous information
  constant C_EPOCH_INT : integer := ${datetime_arr[6]};  -- Seconds since 1970-01-01_00:00:00

  -- Miscellaneous information
  constant C_GIT_HASH_HEX : std_logic_vector(31 downto 0) := X"${last_commit}";

begin

  version_major <= C_VER_MAJOR_HEX;
  version_minor <= C_VER_MINOR_HEX;
  version_sub   <= C_VER_PATCH_HEX;
  year          <= C_YEAR_HEX;
  month         <= C_MONTH_HEX;
  day           <= C_DAY_HEX;
  hour          <= C_HOUR_HEX;
  minute        <= C_MINUTE_HEX;
  second        <= C_SECOND_HEX;
  git_hash      <= C_GIT_HASH_HEX;

end architecture rtl;

EOM